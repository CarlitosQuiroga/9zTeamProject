{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlitos\\\\Desktop\\\\TopNav\\\\my-app\\\\src\\\\components\\\\logReg\\\\register\\\\register.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst saveUser = require('./../../../service/api');\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    var id = 0;\n    this.state = {\n      identification: ++id,\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(e) {\n    const [refresh, setRefresh] = useState(0);\n\n    /**\r\n     * Declaración hook de estado usado para almacenar los datos provenietes de la BD para llenar la tabla estudiantes\r\n     */\n    const [studentTableData, setStudentTableData] = useState({\n      student: []\n    });\n\n    /**\r\n     * Declaración de hook de estado usado para almacenar los datos de cada input del form\r\n     */\n    const [studentFormData, setStudentFormData] = useState({\n      identification: \"\",\n      firstname: \"\",\n      lastname: \"\"\n    });\n    /**\r\n     * Hook de efecto usado para buscar los datos de la base de datos y se ejecuta cada vez que la variable de estado \"refresh\" se actualice\r\n     */\n    useEffect(() => {\n      fillTableStudent().then(response => {\n        setStudentTableData(response.data);\n      });\n    }, [refresh]);\n\n    /**\r\n     * Función que captura el cambio de valor en cada input del form\r\n     * @param {*} event\r\n     */\n    const handleInputChange = event => {\n      setStudentFormData({\n        ...studentFormData,\n        [event.target.name]: event.target.value\n      });\n    };\n\n    /**\r\n     * Función que ejecuta el método POST saveStudent para guardar un estudiante al hacer submit\r\n     * @param {*} event\r\n     */\n    const handleSubmit = event => {\n      event.preventDefault();\n      saveStudent(studentFormData).then(response => {\n        if (response.status === 200) {\n          setRefresh(Math.random());\n        }\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Nombre\",\n          onChange: e => this.setState({\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Correo electr\\xF3nico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          placeholder: \"Email\",\n          onChange: e => this.setState({\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Contrase\\xF1a\",\n          onChange: e => this.setState({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"forgot-password text-right\",\n        children: [\"\\xBFTienes una cuenta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/Login\",\n          children: \"inicia sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","useEffect","useState","saveUser","require","SignUp","Component","constructor","props","id","state","identification","username","email","password","handleSubmit","bind","e","refresh","setRefresh","studentTableData","setStudentTableData","student","studentFormData","setStudentFormData","firstname","lastname","fillTableStudent","then","response","data","handleInputChange","event","target","name","value","preventDefault","saveStudent","status","Math","random","render","setState"],"sources":["C:/Users/Carlitos/Desktop/TopNav/my-app/src/components/logReg/register/register.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst saveUser = require('./../../../service/api');\r\n\r\nexport default class SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var id = 0;\r\n    this.state = {\r\n      identification: ++id,\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit(e) {\r\n    const [refresh, setRefresh] = useState(0);\r\n\r\n  /**\r\n   * Declaración hook de estado usado para almacenar los datos provenietes de la BD para llenar la tabla estudiantes\r\n   */\r\n  const [studentTableData, setStudentTableData] = useState({ student: [] });\r\n\r\n  /**\r\n   * Declaración de hook de estado usado para almacenar los datos de cada input del form\r\n   */\r\n  const [studentFormData, setStudentFormData] = useState({\r\n    identification: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n  });\r\n  /**\r\n   * Hook de efecto usado para buscar los datos de la base de datos y se ejecuta cada vez que la variable de estado \"refresh\" se actualice\r\n   */\r\n  useEffect(() => {\r\n    fillTableStudent().then((response) => {\r\n      setStudentTableData(response.data);\r\n    });\r\n  }, [refresh]);\r\n\r\n  /**\r\n   * Función que captura el cambio de valor en cada input del form\r\n   * @param {*} event\r\n   */\r\n  const handleInputChange = (event) => {\r\n    setStudentFormData({\r\n      ...studentFormData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Función que ejecuta el método POST saveStudent para guardar un estudiante al hacer submit\r\n   * @param {*} event\r\n   */\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    saveStudent(studentFormData).then((response) => {\r\n      if (response.status === 200) {\r\n        setRefresh(Math.random());\r\n      }\r\n    });\r\n  };\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h3>Registrase</h3>\r\n\r\n        <div className=\"mb-3\">\r\n          <label>Nombre</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Nombre\"\r\n            onChange={(e) => this.setState({ username: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        {/* <div className=\"mb-3\">\r\n          <label>Apellido</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Apellido\"\r\n            onChange={(e) => this.setState({ lname: e.target.value })}\r\n          />\r\n        </div> */}\r\n\r\n        <div className=\"mb-3\">\r\n          <label>Correo electrónico</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email\"\r\n            onChange={(e) => this.setState({ email: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label>Contraseña</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Contraseña\"\r\n            onChange={(e) => this.setState({ password: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"d-grid\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Registrarse\r\n          </button>\r\n        </div>\r\n        <p className=\"forgot-password text-right\">\r\n          ¿Tienes una cuenta? <a href=\"/Login\">inicia sesión</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}