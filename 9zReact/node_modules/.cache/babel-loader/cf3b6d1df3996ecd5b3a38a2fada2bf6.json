{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlitos\\\\Desktop\\\\9zTeamProject\\\\9zReact\\\\src\\\\components\\\\logReg\\\\register\\\\SignUpForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  fillTableStudent,\n  saveStudent\n} = require(\"../services/apiCall\");\nconst SignUp = () => {\n  _s();\n  /**\r\n   * Declaración hook de estado estado usado para actualizar la tabla cuando se agrega un nuevo estudiante\r\n   */\n  const [refresh, setRefresh] = useState(0);\n\n  /**\r\n   * Declaración hook de estado usado para almacenar los datos provenietes de la BD para llenar la tabla estudiantes\r\n   */\n  const [studentTableData, setStudentTableData] = useState({\n    student: []\n  });\n\n  /**\r\n   * Declaración de hook de estado usado para almacenar los datos de cada input del form\r\n   */\n  const [studentFormData, setStudentFormData] = useState({\n    identification: \"\",\n    firstname: \"\",\n    lastname: \"\"\n  });\n  /**\r\n   * Hook de efecto usado para buscar los datos de la base de datos y se ejecuta cada vez que la variable de estado \"refresh\" se actualice\r\n   */\n  useEffect(() => {\n    fillTableStudent().then(response => {\n      setStudentTableData(response.data);\n    });\n  }, [refresh]);\n\n  /**\r\n   * Función que captura el cambio de valor en cada input del form\r\n   * @param {*} event\r\n   */\n  const handleInputChange = event => {\n    setStudentFormData({\n      ...studentFormData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  /**\r\n   * Función que ejecuta el método POST saveStudent para guardar un estudiante al hacer submit\r\n   * @param {*} event\r\n   */\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveStudent(studentFormData).then(response => {\n      if (response.status === 200) {\n        setRefresh(Math.random());\n      }\n    });\n  };\n\n  /**\r\n   * El form posee un atributo \"onSubmit\" el cual ejecuta la función \"handleSubmit\" al momento de clickear en el botón\r\n   * Cada input tiene asignado un atributo \"onChange\" el cual ejecuta la función \"handleInputChange\" cuando\r\n   * se modifica el mismo (input).\r\n   */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm w-30\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"identification\",\n            className: \"form-label\",\n            children: \"Identification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"identification\",\n            className: \"form-control\",\n            onChange: handleInputChange,\n            name: \"identification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname\",\n            className: \"form-label\",\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"firstname\",\n            className: \"form-control\",\n            onChange: handleInputChange,\n            name: \"firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname\",\n            className: \"form-label\",\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"lastname\",\n            className: \"form-control\",\n            onChange: handleInputChange,\n            name: \"lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-dark btn-submit mb-4\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table table-dark table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Identification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: studentTableData.student.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.identification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.firstname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUp, \"rt5XJAXjaZX6R+31SA8wm4pYEDQ=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useEffect","useState","fillTableStudent","saveStudent","require","SignUp","refresh","setRefresh","studentTableData","setStudentTableData","student","studentFormData","setStudentFormData","identification","firstname","lastname","then","response","data","handleInputChange","event","target","name","value","handleSubmit","preventDefault","status","Math","random","map"],"sources":["C:/Users/Carlitos/Desktop/9zTeamProject/9zReact/src/components/logReg/register/SignUpForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst { fillTableStudent, saveStudent } = require(\"../services/apiCall\");\r\n\r\nconst SignUp = () => {\r\n  /**\r\n   * Declaración hook de estado estado usado para actualizar la tabla cuando se agrega un nuevo estudiante\r\n   */\r\n  const [refresh, setRefresh] = useState(0);\r\n\r\n  /**\r\n   * Declaración hook de estado usado para almacenar los datos provenietes de la BD para llenar la tabla estudiantes\r\n   */\r\n  const [studentTableData, setStudentTableData] = useState({ student: [] });\r\n\r\n  /**\r\n   * Declaración de hook de estado usado para almacenar los datos de cada input del form\r\n   */\r\n  const [studentFormData, setStudentFormData] = useState({\r\n    identification: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n  });\r\n  /**\r\n   * Hook de efecto usado para buscar los datos de la base de datos y se ejecuta cada vez que la variable de estado \"refresh\" se actualice\r\n   */\r\n  useEffect(() => {\r\n    fillTableStudent().then((response) => {\r\n      setStudentTableData(response.data);\r\n    });\r\n  }, [refresh]);\r\n\r\n  /**\r\n   * Función que captura el cambio de valor en cada input del form\r\n   * @param {*} event\r\n   */\r\n  const handleInputChange = (event) => {\r\n    setStudentFormData({\r\n      ...studentFormData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Función que ejecuta el método POST saveStudent para guardar un estudiante al hacer submit\r\n   * @param {*} event\r\n   */\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    saveStudent(studentFormData).then((response) => {\r\n      if (response.status === 200) {\r\n        setRefresh(Math.random());\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * El form posee un atributo \"onSubmit\" el cual ejecuta la función \"handleSubmit\" al momento de clickear en el botón\r\n   * Cada input tiene asignado un atributo \"onChange\" el cual ejecuta la función \"handleInputChange\" cuando\r\n   * se modifica el mismo (input).\r\n   */\r\n  return (\r\n    <>\r\n      <div className=\"container-sm w-30\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"identification\" className=\"form-label\">\r\n              Identification\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"identification\"\r\n              className=\"form-control\"\r\n              onChange={handleInputChange}\r\n              name=\"identification\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"firstname\" className=\"form-label\">\r\n              Firstname\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"firstname\"\r\n              className=\"form-control\"\r\n              onChange={handleInputChange}\r\n              name=\"firstname\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"lastname\" className=\"form-label\">\r\n              Lastname\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"lastname\"\r\n              className=\"form-control\"\r\n              onChange={handleInputChange}\r\n              name=\"lastname\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <button type=\"submit\" className=\"btn btn-dark btn-submit mb-4\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"container-sm\">\r\n        <table class=\"table table-dark table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Identification</th>\r\n              <th>Firstname</th>\r\n              <th>Lastname</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/**\r\n             * La función map se ejecuta sobre la variable de estado que contiene los datos traidos de la base de datos\r\n             * y realizamos un \"map\" para llenar nuestra tabla por cada elemento dentro del array de estudiantes\r\n             */}\r\n            {studentTableData.student.map((student) => (\r\n              <tr>\r\n                <td>{student.identification}</td>\r\n                <td>{student.firstname}</td>\r\n                <td>{student.lastname}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AACnD,MAAM;EAAEC,gBAAgB;EAAEC;AAAY,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAExE,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB;AACF;AACA;EACE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;;EAEzC;AACF;AACA;EACE,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC;IAAES,OAAO,EAAE;EAAG,CAAC,CAAC;;EAEzE;AACF;AACA;EACE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC;IACrDY,cAAc,EAAE,EAAE;IAClBC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF;AACF;AACA;EACEf,SAAS,CAAC,MAAM;IACdE,gBAAgB,EAAE,CAACc,IAAI,CAAEC,QAAQ,IAAK;MACpCR,mBAAmB,CAACQ,QAAQ,CAACC,IAAI,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACZ,OAAO,CAAC,CAAC;;EAEb;AACF;AACA;AACA;EACE,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;IACnCR,kBAAkB,CAAC;MACjB,GAAGD,eAAe;MAClB,CAACS,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ,CAAC;;EAED;AACF;AACA;AACA;EACE,MAAMC,YAAY,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,EAAE;IACtBtB,WAAW,CAACQ,eAAe,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;MAC9C,IAAIA,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;QAC3BnB,UAAU,CAACoB,IAAI,CAACC,MAAM,EAAE,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC;QAAM,QAAQ,EAAEJ,YAAa;QAAA,wBAC3B;UAAK,SAAS,EAAC,KAAK;UAAA,wBAClB;YAAO,OAAO,EAAC,gBAAgB;YAAC,SAAS,EAAC,YAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE9C,eACR;YACE,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,gBAAgB;YAC5B,SAAS,EAAC,cAAc;YACxB,QAAQ,EAAEL,iBAAkB;YAC5B,IAAI,EAAC;UAAgB;YAAA;YAAA;YAAA;UAAA,QACd;QAAA;UAAA;UAAA;UAAA;QAAA,QACL,eACN;UAAK,SAAS,EAAC,KAAK;UAAA,wBAClB;YAAO,OAAO,EAAC,WAAW;YAAC,SAAS,EAAC,YAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEzC,eACR;YACE,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,WAAW;YACvB,SAAS,EAAC,cAAc;YACxB,QAAQ,EAAEA,iBAAkB;YAC5B,IAAI,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA,QACT;QAAA;UAAA;UAAA;UAAA;QAAA,QACL,eACN;UAAK,SAAS,EAAC,KAAK;UAAA,wBAClB;YAAO,OAAO,EAAC,UAAU;YAAC,SAAS,EAAC,YAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAExC,eACR;YACE,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,UAAU;YACtB,SAAS,EAAC,cAAc;YACxB,QAAQ,EAAEA,iBAAkB;YAC5B,IAAI,EAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QACR;QAAA;UAAA;UAAA;UAAA;QAAA,QACL,eACN;UAAK,SAAS,EAAC,+BAA+B;UAAA,uBAC5C;YAAQ,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAC,8BAA8B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAErD;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QACH,eAEN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAO,KAAK,EAAC,gCAAgC;QAAA,wBAC3C;UAAA,uBACE;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAuB,eACvB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAkB,eAClB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAiB;UAAA;YAAA;YAAA;YAAA;UAAA;QACd;UAAA;UAAA;UAAA;QAAA,QACC,eACR;UAAA,UAKGX,gBAAgB,CAACE,OAAO,CAACmB,GAAG,CAAEnB,OAAO,iBACpC;YAAA,wBACE;cAAA,UAAKA,OAAO,CAACG;YAAc;cAAA;cAAA;cAAA;YAAA,QAAM,eACjC;cAAA,UAAKH,OAAO,CAACI;YAAS;cAAA;cAAA;cAAA;YAAA,QAAM,eAC5B;cAAA,UAAKJ,OAAO,CAACK;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QAE9B;QAAC;UAAA;UAAA;UAAA;QAAA,QACI;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA,gBACL;AAEP,CAAC;AAAC,GAnIIV,MAAM;AAAA,KAANA,MAAM;AAqIZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}